package com.dbflow5.database.config

import com.dbflow5.config.JournalMode
import com.dbflow5.config.OpenHelperCreator
import com.dbflow5.config.TransactionDispatcherFactory
import com.dbflow5.database.DatabaseCallback
import com.dbflow5.database.OpenHelper
import com.dbflow5.runtime.DirectModelNotifier
import com.dbflow5.runtime.ModelNotifierFactory
import com.dbflow5.transaction.TransactionDispatcher

/**
 * Autogenerated by the library to provide initialization.
 */
data class DBSettings(
    val name: String,
    val openHelperCreator: OpenHelperCreator = OpenHelperCreator(::OpenHelper),
    val transactionDispatcherFactory: TransactionDispatcherFactory =
        TransactionDispatcherFactory(::TransactionDispatcher),
    val databaseCallback: DatabaseCallback? = null,
    val modelNotifierFactory: ModelNotifierFactory = ModelNotifierFactory(::DirectModelNotifier),
    val inMemory: Boolean = false,
    val databaseExtensionName: String = DEFAULT_EXT,
    val journalMode: JournalMode = JournalMode.Automatic,
    val throwExceptionsOnCreate: Boolean = true,
) {

    private companion object {
        const val DEFAULT_EXT = ".db"
    }
}
